/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/events/route";
exports.ids = ["app/api/events/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fevents%2Froute&page=%2Fapi%2Fevents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevents%2Froute.ts&appDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fevents%2Froute&page=%2Fapi%2Fevents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevents%2Froute.ts&appDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var E_Deepshika_web_development_Together_We_Can_main_src_app_api_events_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/events/route.ts */ \"(rsc)/./src/app/api/events/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/events/route\",\n        pathname: \"/api/events\",\n        filename: \"route\",\n        bundlePath: \"app/api/events/route\"\n    },\n    resolvedPagePath: \"E:\\\\Deepshika\\\\web development\\\\Together-We-Can-main\\\\src\\\\app\\\\api\\\\events\\\\route.ts\",\n    nextConfigOutput,\n    userland: E_Deepshika_web_development_Together_We_Can_main_src_app_api_events_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZldmVudHMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmV2ZW50cyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmV2ZW50cyUyRnJvdXRlLnRzJmFwcERpcj1FJTNBJTVDRGVlcHNoaWthJTVDd2ViJTIwZGV2ZWxvcG1lbnQlNUNUb2dldGhlci1XZS1DYW4tbWFpbiU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RSUzQSU1Q0RlZXBzaGlrYSU1Q3dlYiUyMGRldmVsb3BtZW50JTVDVG9nZXRoZXItV2UtQ2FuLW1haW4maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3FDO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJFOlxcXFxEZWVwc2hpa2FcXFxcd2ViIGRldmVsb3BtZW50XFxcXFRvZ2V0aGVyLVdlLUNhbi1tYWluXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGV2ZW50c1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZXZlbnRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZXZlbnRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9ldmVudHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJFOlxcXFxEZWVwc2hpa2FcXFxcd2ViIGRldmVsb3BtZW50XFxcXFRvZ2V0aGVyLVdlLUNhbi1tYWluXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGV2ZW50c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fevents%2Froute&page=%2Fapi%2Fevents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevents%2Froute.ts&appDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/events/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/events/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n// GET endpoint for fetching events with filters\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const cityId = searchParams.get(\"cityId\");\n        const categoryId = searchParams.get(\"categoryId\");\n        const sortBy = searchParams.get(\"sortBy\") || \"date\";\n        const top = searchParams.get(\"top\");\n        const now = new Date();\n        // Build where clause for filtering\n        let where = {};\n        // Ignore city/category filter if value is empty or 'all' (case-insensitive)\n        const isAll = (val)=>!val || val.trim() === '' || val.trim().toLowerCase() === 'all' || val.trim().toLowerCase() === 'all cities' || val.trim().toLowerCase() === 'all categories';\n        if (!isAll(cityId)) {\n            // If cityId looks like an ObjectId, use it directly\n            if (cityId && /^[a-f\\d]{24}$/i.test(cityId)) {\n                where.cityId = cityId;\n            } else if (cityId) {\n                // Otherwise, try to look up the city by name/state\n                const [cityName, state] = cityId.split(\",\").map((s)=>s.trim());\n                const city = await prisma.city.findFirst({\n                    where: {\n                        cityName: cityName,\n                        ...state ? {\n                            state: state\n                        } : {}\n                    }\n                });\n                if (city) {\n                    where.cityId = city.id;\n                }\n            }\n        }\n        if (!isAll(categoryId)) {\n            // If categoryId looks like an ObjectId, use it directly\n            if (categoryId && /^[a-f\\d]{24}$/i.test(categoryId)) {\n                where.categoryIds = {\n                    has: categoryId\n                };\n            } else if (categoryId) {\n                // Otherwise, try to look up the category by name\n                const category = await prisma.category.findFirst({\n                    where: {\n                        categoryName: categoryId\n                    }\n                });\n                if (category) {\n                    where.categoryIds = {\n                        has: category.id\n                    };\n                }\n            }\n        }\n        // Only show upcoming events (endDate or startDate in the future)\n        where = {\n            ...where,\n            OR: [\n                {\n                    endDate: {\n                        gte: now\n                    }\n                },\n                {\n                    AND: [\n                        {\n                            endDate: null\n                        },\n                        {\n                            startDate: {\n                                gte: now\n                            }\n                        }\n                    ]\n                }\n            ],\n            status: {\n                not: \"completed\"\n            }\n        };\n        // If 'top' param is present, return top N drives by participants\n        if (top) {\n            const limit = parseInt(top);\n            if (!isNaN(limit)) {\n                const topEvents = await prisma.event.findMany({\n                    take: limit,\n                    orderBy: {\n                        currentParticipants: 'desc'\n                    },\n                    where,\n                    include: {\n                        city: true,\n                        categories: true,\n                        creator: {\n                            select: {\n                                id: true,\n                                name: true\n                            }\n                        }\n                    }\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(topEvents);\n            }\n        }\n        // Fetch events with filters\n        let events = await prisma.event.findMany({\n            where,\n            include: {\n                city: true,\n                categories: true,\n                creator: {\n                    select: {\n                        id: true,\n                        name: true\n                    }\n                }\n            },\n            orderBy: {\n                startDate: \"asc\"\n            }\n        });\n        // Filter events based on minimum participant requirements\n        events = events.filter((event)=>{\n            const minParticipants = Math.max(Math.ceil(event.expectedParticipants / 3), 10 // minimum of 10\n            );\n            return event.currentParticipants >= minParticipants;\n        });\n        // Auto-update event statuses on access\n        const updates = events.map(async (event)=>{\n            let needsUpdate = false;\n            let newStatus = event.status;\n            let newStatusReason = event.statusReason;\n            let newPostponedUntil = event.postponedUntil;\n            const minParticipants = Math.max(Math.ceil(event.expectedParticipants / 3), 10);\n            const effectiveEndDate = event.endDate || event.startDate;\n            // Set to not_completed if event is over and did not meet minimum participants\n            if (new Date(effectiveEndDate) < now && event.currentParticipants < minParticipants && event.status !== \"not_completed\" && event.status !== \"cancelled\") {\n                newStatus = \"not_completed\";\n                newStatusReason = \"Event did not meet the minimum participant requirement and was not completed.\";\n                needsUpdate = true;\n            }\n            // Always set to completed if the end date has passed, regardless of previous status (unless cancelled)\n            if (new Date(effectiveEndDate) < now && event.status !== \"completed\" && event.status !== \"cancelled\") {\n                newStatus = \"completed\";\n                newStatusReason = \"Automatically completed as end date passed.\";\n                needsUpdate = true;\n                console.log(`Auto-completing event ${event.id} (${event.eventName}) as its end date (${effectiveEndDate}) is before now (${now.toISOString()})`);\n            } else if (event.status === \"postponed\" && event.postponedUntil && new Date(event.postponedUntil) < now) {\n                // Logic to revert from postponed to upcoming (already present)\n                newStatus = \"upcoming\";\n                newStatusReason = \"Automatically resumed after postponement period.\";\n                newPostponedUntil = null; // Clear postponedUntil once resumed\n                needsUpdate = true;\n            } else if (event.status === \"upcoming\" && new Date(event.startDate) <= now && (event.endDate ? new Date(event.endDate) >= now : true)) {\n                // Logic to set upcoming to active if start date has passed and end date hasn't (or no end date)\n                newStatus = \"active\";\n                newStatusReason = \"Automatically set to active as start date has passed.\";\n                needsUpdate = true;\n            } else if (event.status === \"active\" && effectiveEndDate && new Date(effectiveEndDate) < now) {\n                // Logic to set active to completed if end date has passed\n                newStatus = \"completed\";\n                newStatusReason = \"Automatically completed as end date passed while active.\";\n                needsUpdate = true;\n                console.log(`Auto-completing active event ${event.id} (${event.eventName}) as its end date (${effectiveEndDate}) is before now (${now.toISOString()})`);\n            }\n            if (needsUpdate) {\n                // Always include all required fields\n                return await prisma.event.update({\n                    where: {\n                        id: event.id\n                    },\n                    data: {\n                        status: newStatus,\n                        statusReason: newStatusReason,\n                        statusUpdatedAt: now,\n                        postponedUntil: newPostponedUntil\n                    },\n                    include: {\n                        city: true,\n                        categories: true,\n                        creator: {\n                            select: {\n                                id: true,\n                                name: true\n                            }\n                        }\n                    }\n                });\n            } else {\n                // Always fetch the full event with all required fields\n                return await prisma.event.findUnique({\n                    where: {\n                        id: event.id\n                    },\n                    include: {\n                        city: true,\n                        categories: true,\n                        creator: {\n                            select: {\n                                id: true,\n                                name: true\n                            }\n                        }\n                    }\n                });\n            }\n        });\n        // Wait for all potential updates to complete\n        const updatedResults = await Promise.all(updates);\n        events = updatedResults.filter((event)=>event !== null);\n        // Filter out any events that somehow still have null city (just in case)\n        events = events.filter((event)=>event.city !== null);\n        // Sort events\n        if (sortBy === \"date\") {\n            events = events.sort((a, b)=>new Date(a.startDate).getTime() - new Date(b.startDate).getTime());\n        } else if (sortBy === \"participants\") {\n            events = events.sort((a, b)=>b.currentParticipants - a.currentParticipants);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(events || []);\n    } catch (error) {\n        // Safely log the error\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n        console.error(\"Error fetching events:\", errorMessage);\n        // Return a proper error response\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Error fetching events\",\n            message: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n// POST endpoint for creating events (existing code)\nasync function POST(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_2__.getServerSession)(_lib_auth__WEBPACK_IMPORTED_MODULE_3__.authOptions);\n        // Check if user is authenticated\n        if (!session?.user?.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                message: \"You must be signed in to create an event\"\n            }, {\n                status: 401\n            });\n        }\n        const data = await request.json();\n        const { eventName, description, startDate, endDate, time, location, fullAddress, latitude, longitude, cityId, categoryId, expectedParticipants } = data;\n        // Validate required fields\n        if (!eventName || !description || !startDate || !time || !location || !cityId || !categoryId || !expectedParticipants) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                message: \"Missing required fields\"\n            }, {\n                status: 400\n            });\n        }\n        // Create event in MongoDB\n        const event = await prisma.event.create({\n            data: {\n                eventName,\n                description,\n                startDate: new Date(startDate),\n                endDate: endDate ? new Date(endDate) : undefined,\n                time,\n                location,\n                fullAddress,\n                latitude,\n                longitude,\n                cityId,\n                categoryIds: [\n                    categoryId\n                ],\n                expectedParticipants: parseInt(expectedParticipants),\n                currentParticipants: 0,\n                status: \"upcoming\",\n                creatorId: session.user.id,\n                createdAt: new Date(),\n                updatedAt: new Date()\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json(event);\n    } catch (error) {\n        console.error(\"Error creating event:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            message: \"Error creating event\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9ldmVudHMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0Q7QUFDRTtBQUNYO0FBQ0o7QUFFekMsTUFBTUksU0FBUyxJQUFJSix3REFBWUE7QUFFL0IsZ0RBQWdEO0FBQ3pDLGVBQWVLLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7UUFDNUMsTUFBTUMsU0FBU0gsYUFBYUksR0FBRyxDQUFDO1FBQ2hDLE1BQU1DLGFBQWFMLGFBQWFJLEdBQUcsQ0FBQztRQUNwQyxNQUFNRSxTQUFTTixhQUFhSSxHQUFHLENBQUMsYUFBYTtRQUM3QyxNQUFNRyxNQUFNUCxhQUFhSSxHQUFHLENBQUM7UUFDN0IsTUFBTUksTUFBTSxJQUFJQztRQUVoQixtQ0FBbUM7UUFDbkMsSUFBSUMsUUFBZ0MsQ0FBQztRQUVyQyw0RUFBNEU7UUFDNUUsTUFBTUMsUUFBUSxDQUFDQyxNQUFtQyxDQUFDQSxPQUFPQSxJQUFJQyxJQUFJLE9BQU8sTUFBTUQsSUFBSUMsSUFBSSxHQUFHQyxXQUFXLE9BQU8sU0FBU0YsSUFBSUMsSUFBSSxHQUFHQyxXQUFXLE9BQU8sZ0JBQWdCRixJQUFJQyxJQUFJLEdBQUdDLFdBQVcsT0FBTztRQUUvTCxJQUFJLENBQUNILE1BQU1SLFNBQVM7WUFDbEIsb0RBQW9EO1lBQ3BELElBQUlBLFVBQVUsaUJBQWlCWSxJQUFJLENBQUNaLFNBQVM7Z0JBQzNDTyxNQUFNUCxNQUFNLEdBQUdBO1lBQ2pCLE9BQU8sSUFBSUEsUUFBUTtnQkFDakIsbURBQW1EO2dCQUNuRCxNQUFNLENBQUNhLFVBQVVDLE1BQU0sR0FBR2QsT0FBT2UsS0FBSyxDQUFDLEtBQUtDLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVAsSUFBSTtnQkFDM0QsTUFBTVEsT0FBTyxNQUFNeEIsT0FBT3dCLElBQUksQ0FBQ0MsU0FBUyxDQUFDO29CQUN2Q1osT0FBTzt3QkFDTE0sVUFBVUE7d0JBQ1YsR0FBSUMsUUFBUTs0QkFBRUEsT0FBT0E7d0JBQU0sSUFBSSxDQUFDLENBQUM7b0JBQ25DO2dCQUNGO2dCQUNBLElBQUlJLE1BQU07b0JBQ1JYLE1BQU1QLE1BQU0sR0FBR2tCLEtBQUtFLEVBQUU7Z0JBQ3hCO1lBQ0Y7UUFDRjtRQUVBLElBQUksQ0FBQ1osTUFBTU4sYUFBYTtZQUN0Qix3REFBd0Q7WUFDeEQsSUFBSUEsY0FBYyxpQkFBaUJVLElBQUksQ0FBQ1YsYUFBYTtnQkFDbkRLLE1BQU1jLFdBQVcsR0FBRztvQkFBRUMsS0FBS3BCO2dCQUFXO1lBQ3hDLE9BQU8sSUFBSUEsWUFBWTtnQkFDckIsaURBQWlEO2dCQUNqRCxNQUFNcUIsV0FBVyxNQUFNN0IsT0FBTzZCLFFBQVEsQ0FBQ0osU0FBUyxDQUFDO29CQUMvQ1osT0FBTzt3QkFDTGlCLGNBQWN0QjtvQkFDaEI7Z0JBQ0Y7Z0JBQ0EsSUFBSXFCLFVBQVU7b0JBQ1poQixNQUFNYyxXQUFXLEdBQUc7d0JBQUVDLEtBQUtDLFNBQVNILEVBQUU7b0JBQUM7Z0JBQ3pDO1lBQ0Y7UUFDRjtRQUVBLGlFQUFpRTtRQUNqRWIsUUFBUTtZQUNOLEdBQUdBLEtBQUs7WUFDUmtCLElBQUk7Z0JBQ0Y7b0JBQUVDLFNBQVM7d0JBQUVDLEtBQUt0QjtvQkFBSTtnQkFBRTtnQkFDeEI7b0JBQUV1QixLQUFLO3dCQUFDOzRCQUFFRixTQUFTO3dCQUFLO3dCQUFHOzRCQUFFRyxXQUFXO2dDQUFFRixLQUFLdEI7NEJBQUk7d0JBQUU7cUJBQUU7Z0JBQUM7YUFDekQ7WUFDRHlCLFFBQVE7Z0JBQUVDLEtBQUs7WUFBWTtRQUM3QjtRQUVBLGlFQUFpRTtRQUNqRSxJQUFJM0IsS0FBSztZQUNQLE1BQU00QixRQUFRQyxTQUFTN0I7WUFDdkIsSUFBSSxDQUFDOEIsTUFBTUYsUUFBUTtnQkFDakIsTUFBTUcsWUFBWSxNQUFNekMsT0FBTzBDLEtBQUssQ0FBQ0MsUUFBUSxDQUFDO29CQUM1Q0MsTUFBTU47b0JBQ05PLFNBQVM7d0JBQ1BDLHFCQUFxQjtvQkFDdkI7b0JBQ0FqQztvQkFDQWtDLFNBQVM7d0JBQ1B2QixNQUFNO3dCQUNOd0IsWUFBWTt3QkFDWkMsU0FBUzs0QkFDUEMsUUFBUTtnQ0FDTnhCLElBQUk7Z0NBQ0p5QixNQUFNOzRCQUNSO3dCQUNGO29CQUNGO2dCQUNGO2dCQUNBLE9BQU90RCxxREFBWUEsQ0FBQ3VELElBQUksQ0FBQ1g7WUFDM0I7UUFDRjtRQUVBLDRCQUE0QjtRQUM1QixJQUFJWSxTQUFTLE1BQU1yRCxPQUFPMEMsS0FBSyxDQUFDQyxRQUFRLENBQUM7WUFDdkM5QjtZQUNBa0MsU0FBUztnQkFDUHZCLE1BQU07Z0JBQ053QixZQUFZO2dCQUNaQyxTQUFTO29CQUNQQyxRQUFRO3dCQUNOeEIsSUFBSTt3QkFDSnlCLE1BQU07b0JBQ1I7Z0JBQ0Y7WUFDRjtZQUNBTixTQUFTO2dCQUNQVixXQUFXO1lBQ2I7UUFDRjtRQUVBLDBEQUEwRDtRQUMxRGtCLFNBQVNBLE9BQU9DLE1BQU0sQ0FBQ1osQ0FBQUE7WUFDckIsTUFBTWEsa0JBQWtCQyxLQUFLQyxHQUFHLENBQzlCRCxLQUFLRSxJQUFJLENBQUNoQixNQUFNaUIsb0JBQW9CLEdBQUcsSUFDdkMsR0FBRyxnQkFBZ0I7O1lBRXJCLE9BQU9qQixNQUFNSSxtQkFBbUIsSUFBSVM7UUFDdEM7UUFFQSx1Q0FBdUM7UUFDdkMsTUFBTUssVUFBVVAsT0FBTy9CLEdBQUcsQ0FBQyxPQUFPb0I7WUFDaEMsSUFBSW1CLGNBQWM7WUFDbEIsSUFBSUMsWUFBWXBCLE1BQU1OLE1BQU07WUFDNUIsSUFBSTJCLGtCQUFrQnJCLE1BQU1zQixZQUFZO1lBQ3hDLElBQUlDLG9CQUFvQnZCLE1BQU13QixjQUFjO1lBRTVDLE1BQU1YLGtCQUFrQkMsS0FBS0MsR0FBRyxDQUM5QkQsS0FBS0UsSUFBSSxDQUFDaEIsTUFBTWlCLG9CQUFvQixHQUFHLElBQ3ZDO1lBRUYsTUFBTVEsbUJBQW1CekIsTUFBTVYsT0FBTyxJQUFJVSxNQUFNUCxTQUFTO1lBRXpELDhFQUE4RTtZQUM5RSxJQUNFLElBQUl2QixLQUFLdUQsb0JBQW9CeEQsT0FDN0IrQixNQUFNSSxtQkFBbUIsR0FBR1MsbUJBQzVCYixNQUFNTixNQUFNLEtBQUssbUJBQ2pCTSxNQUFNTixNQUFNLEtBQUssYUFDakI7Z0JBQ0EwQixZQUFZO2dCQUNaQyxrQkFBa0I7Z0JBQ2xCRixjQUFjO1lBQ2hCO1lBQ0EsdUdBQXVHO1lBQ3ZHLElBQUksSUFBSWpELEtBQUt1RCxvQkFBb0J4RCxPQUFPK0IsTUFBTU4sTUFBTSxLQUFLLGVBQWVNLE1BQU1OLE1BQU0sS0FBSyxhQUFhO2dCQUNwRzBCLFlBQVk7Z0JBQ1pDLGtCQUFrQjtnQkFDbEJGLGNBQWM7Z0JBQ2RPLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHNCQUFzQixFQUFFM0IsTUFBTWhCLEVBQUUsQ0FBQyxFQUFFLEVBQUVnQixNQUFNNEIsU0FBUyxDQUFDLG1CQUFtQixFQUFFSCxpQkFBaUIsaUJBQWlCLEVBQUV4RCxJQUFJNEQsV0FBVyxHQUFHLENBQUMsQ0FBQztZQUNqSixPQUFPLElBQUk3QixNQUFNTixNQUFNLEtBQUssZUFBZU0sTUFBTXdCLGNBQWMsSUFBSSxJQUFJdEQsS0FBSzhCLE1BQU13QixjQUFjLElBQUl2RCxLQUFLO2dCQUN2RywrREFBK0Q7Z0JBQy9EbUQsWUFBWTtnQkFDWkMsa0JBQWtCO2dCQUNsQkUsb0JBQW9CLE1BQU0sb0NBQW9DO2dCQUM5REosY0FBYztZQUNoQixPQUFPLElBQUluQixNQUFNTixNQUFNLEtBQUssY0FBYyxJQUFJeEIsS0FBSzhCLE1BQU1QLFNBQVMsS0FBS3hCLE9BQVErQixDQUFBQSxNQUFNVixPQUFPLEdBQUcsSUFBSXBCLEtBQUs4QixNQUFNVixPQUFPLEtBQUtyQixNQUFNLElBQUcsR0FBSTtnQkFDckksZ0dBQWdHO2dCQUNoR21ELFlBQVk7Z0JBQ1pDLGtCQUFrQjtnQkFDbEJGLGNBQWM7WUFDaEIsT0FBTyxJQUFJbkIsTUFBTU4sTUFBTSxLQUFLLFlBQVkrQixvQkFBb0IsSUFBSXZELEtBQUt1RCxvQkFBb0J4RCxLQUFLO2dCQUM1RiwwREFBMEQ7Z0JBQzFEbUQsWUFBWTtnQkFDWkMsa0JBQWtCO2dCQUNsQkYsY0FBYztnQkFDZE8sUUFBUUMsR0FBRyxDQUFDLENBQUMsNkJBQTZCLEVBQUUzQixNQUFNaEIsRUFBRSxDQUFDLEVBQUUsRUFBRWdCLE1BQU00QixTQUFTLENBQUMsbUJBQW1CLEVBQUVILGlCQUFpQixpQkFBaUIsRUFBRXhELElBQUk0RCxXQUFXLEdBQUcsQ0FBQyxDQUFDO1lBQ3hKO1lBRUEsSUFBSVYsYUFBYTtnQkFDZixxQ0FBcUM7Z0JBQ3JDLE9BQU8sTUFBTTdELE9BQU8wQyxLQUFLLENBQUM4QixNQUFNLENBQUM7b0JBQy9CM0QsT0FBTzt3QkFBRWEsSUFBSWdCLE1BQU1oQixFQUFFO29CQUFDO29CQUN0QitDLE1BQU07d0JBQ0pyQyxRQUFRMEI7d0JBQ1JFLGNBQWNEO3dCQUNkVyxpQkFBaUIvRDt3QkFDakJ1RCxnQkFBZ0JEO29CQUNsQjtvQkFDQWxCLFNBQVM7d0JBQ1B2QixNQUFNO3dCQUNOd0IsWUFBWTt3QkFDWkMsU0FBUzs0QkFBRUMsUUFBUTtnQ0FBRXhCLElBQUk7Z0NBQU15QixNQUFNOzRCQUFLO3dCQUFFO29CQUM5QztnQkFDRjtZQUNGLE9BQU87Z0JBQ0wsdURBQXVEO2dCQUN2RCxPQUFPLE1BQU1uRCxPQUFPMEMsS0FBSyxDQUFDaUMsVUFBVSxDQUFDO29CQUNuQzlELE9BQU87d0JBQUVhLElBQUlnQixNQUFNaEIsRUFBRTtvQkFBQztvQkFDdEJxQixTQUFTO3dCQUNQdkIsTUFBTTt3QkFDTndCLFlBQVk7d0JBQ1pDLFNBQVM7NEJBQUVDLFFBQVE7Z0NBQUV4QixJQUFJO2dDQUFNeUIsTUFBTTs0QkFBSzt3QkFBRTtvQkFDOUM7Z0JBQ0Y7WUFDRjtRQUNGO1FBRUEsNkNBQTZDO1FBQzdDLE1BQU15QixpQkFBaUIsTUFBTUMsUUFBUUMsR0FBRyxDQUFDbEI7UUFDekNQLFNBQVN1QixlQUFldEIsTUFBTSxDQUFDLENBQUNaLFFBQThDQSxVQUFVO1FBRXhGLHlFQUF5RTtRQUN6RVcsU0FBU0EsT0FBT0MsTUFBTSxDQUFDWixDQUFBQSxRQUFTQSxNQUFNbEIsSUFBSSxLQUFLO1FBRS9DLGNBQWM7UUFDZCxJQUFJZixXQUFXLFFBQVE7WUFDckI0QyxTQUFTQSxPQUFPMEIsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU0sSUFBSXJFLEtBQUtvRSxFQUFFN0MsU0FBUyxFQUFFK0MsT0FBTyxLQUFLLElBQUl0RSxLQUFLcUUsRUFBRTlDLFNBQVMsRUFBRStDLE9BQU87UUFDaEcsT0FBTyxJQUFJekUsV0FBVyxnQkFBZ0I7WUFDcEM0QyxTQUFTQSxPQUFPMEIsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1BLEVBQUVuQyxtQkFBbUIsR0FBR2tDLEVBQUVsQyxtQkFBbUI7UUFDOUU7UUFFQSxPQUFPakQscURBQVlBLENBQUN1RCxJQUFJLENBQUNDLFVBQVUsRUFBRTtJQUN2QyxFQUFFLE9BQU84QixPQUFPO1FBQ2QsdUJBQXVCO1FBQ3ZCLE1BQU1DLGVBQWVELGlCQUFpQkUsUUFBUUYsTUFBTUcsT0FBTyxHQUFHO1FBQzlEbEIsUUFBUWUsS0FBSyxDQUFDLDBCQUEwQkM7UUFFeEMsaUNBQWlDO1FBQ2pDLE9BQU92RixxREFBWUEsQ0FBQ3VELElBQUksQ0FDdEI7WUFBRStCLE9BQU87WUFBeUJHLFNBQVNGO1FBQWEsR0FDeEQ7WUFBRWhELFFBQVE7UUFBSTtJQUVsQjtBQUNGO0FBRUEsb0RBQW9EO0FBQzdDLGVBQWVtRCxLQUFLckYsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU1zRixVQUFVLE1BQU0xRiwyREFBZ0JBLENBQUNDLGtEQUFXQTtRQUNsRCxpQ0FBaUM7UUFDakMsSUFBSSxDQUFDeUYsU0FBU0MsTUFBTS9ELElBQUk7WUFDdEIsT0FBTzdCLHFEQUFZQSxDQUFDdUQsSUFBSSxDQUN0QjtnQkFBRWtDLFNBQVM7WUFBMkMsR0FDdEQ7Z0JBQUVsRCxRQUFRO1lBQUk7UUFFbEI7UUFDQSxNQUFNcUMsT0FBTyxNQUFNdkUsUUFBUWtELElBQUk7UUFDL0IsTUFBTSxFQUNKa0IsU0FBUyxFQUNUb0IsV0FBVyxFQUNYdkQsU0FBUyxFQUNUSCxPQUFPLEVBQ1AyRCxJQUFJLEVBQ0pDLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxRQUFRLEVBQ1JDLFNBQVMsRUFDVHpGLE1BQU0sRUFDTkUsVUFBVSxFQUNWbUQsb0JBQW9CLEVBQ3JCLEdBQUdjO1FBQ0osMkJBQTJCO1FBQzNCLElBQUksQ0FBQ0gsYUFBYSxDQUFDb0IsZUFBZSxDQUFDdkQsYUFBYSxDQUFDd0QsUUFBUSxDQUFDQyxZQUFZLENBQUN0RixVQUFVLENBQUNFLGNBQWMsQ0FBQ21ELHNCQUFzQjtZQUNySCxPQUFPOUQscURBQVlBLENBQUN1RCxJQUFJLENBQ3RCO2dCQUFFa0MsU0FBUztZQUEwQixHQUNyQztnQkFBRWxELFFBQVE7WUFBSTtRQUVsQjtRQUNBLDBCQUEwQjtRQUMxQixNQUFNTSxRQUFRLE1BQU0xQyxPQUFPMEMsS0FBSyxDQUFDc0QsTUFBTSxDQUFDO1lBQ3RDdkIsTUFBTTtnQkFDSkg7Z0JBQ0FvQjtnQkFDQXZELFdBQVcsSUFBSXZCLEtBQUt1QjtnQkFDcEJILFNBQVNBLFVBQVUsSUFBSXBCLEtBQUtvQixXQUFXaUU7Z0JBQ3ZDTjtnQkFDQUM7Z0JBQ0FDO2dCQUNBQztnQkFDQUM7Z0JBQ0F6RjtnQkFDQXFCLGFBQWE7b0JBQUNuQjtpQkFBVztnQkFDekJtRCxzQkFBc0JwQixTQUFTb0I7Z0JBQy9CYixxQkFBcUI7Z0JBQ3JCVixRQUFRO2dCQUNSOEQsV0FBV1YsUUFBUUMsSUFBSSxDQUFDL0QsRUFBRTtnQkFDMUJ5RSxXQUFXLElBQUl2RjtnQkFDZndGLFdBQVcsSUFBSXhGO1lBQ2pCO1FBQ0Y7UUFDQSxPQUFPZixxREFBWUEsQ0FBQ3VELElBQUksQ0FBQ1Y7SUFDM0IsRUFBRSxPQUFPeUMsT0FBTztRQUNkZixRQUFRZSxLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxPQUFPdEYscURBQVlBLENBQUN1RCxJQUFJLENBQ3RCO1lBQUVrQyxTQUFTO1FBQXVCLEdBQ2xDO1lBQUVsRCxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsiRTpcXERlZXBzaGlrYVxcd2ViIGRldmVsb3BtZW50XFxUb2dldGhlci1XZS1DYW4tbWFpblxcc3JjXFxhcHBcXGFwaVxcZXZlbnRzXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQsIFByaXNtYSB9IGZyb20gXCJAcHJpc21hL2NsaWVudFwiO1xuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgZ2V0U2VydmVyU2Vzc2lvbiB9IGZyb20gXCJuZXh0LWF1dGhcIjtcbmltcG9ydCB7IGF1dGhPcHRpb25zIH0gZnJvbSBcIkAvbGliL2F1dGhcIjtcblxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xuXG4vLyBHRVQgZW5kcG9pbnQgZm9yIGZldGNoaW5nIGV2ZW50cyB3aXRoIGZpbHRlcnNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gICAgY29uc3QgY2l0eUlkID0gc2VhcmNoUGFyYW1zLmdldChcImNpdHlJZFwiKTtcbiAgICBjb25zdCBjYXRlZ29yeUlkID0gc2VhcmNoUGFyYW1zLmdldChcImNhdGVnb3J5SWRcIik7XG4gICAgY29uc3Qgc29ydEJ5ID0gc2VhcmNoUGFyYW1zLmdldChcInNvcnRCeVwiKSB8fCBcImRhdGVcIjtcbiAgICBjb25zdCB0b3AgPSBzZWFyY2hQYXJhbXMuZ2V0KFwidG9wXCIpO1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG5cbiAgICAvLyBCdWlsZCB3aGVyZSBjbGF1c2UgZm9yIGZpbHRlcmluZ1xuICAgIGxldCB3aGVyZTogUHJpc21hLkV2ZW50V2hlcmVJbnB1dCA9IHt9O1xuXG4gICAgLy8gSWdub3JlIGNpdHkvY2F0ZWdvcnkgZmlsdGVyIGlmIHZhbHVlIGlzIGVtcHR5IG9yICdhbGwnIChjYXNlLWluc2Vuc2l0aXZlKVxuICAgIGNvbnN0IGlzQWxsID0gKHZhbDogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCkgPT4gIXZhbCB8fCB2YWwudHJpbSgpID09PSAnJyB8fCB2YWwudHJpbSgpLnRvTG93ZXJDYXNlKCkgPT09ICdhbGwnIHx8IHZhbC50cmltKCkudG9Mb3dlckNhc2UoKSA9PT0gJ2FsbCBjaXRpZXMnIHx8IHZhbC50cmltKCkudG9Mb3dlckNhc2UoKSA9PT0gJ2FsbCBjYXRlZ29yaWVzJztcblxuICAgIGlmICghaXNBbGwoY2l0eUlkKSkge1xuICAgICAgLy8gSWYgY2l0eUlkIGxvb2tzIGxpa2UgYW4gT2JqZWN0SWQsIHVzZSBpdCBkaXJlY3RseVxuICAgICAgaWYgKGNpdHlJZCAmJiAvXlthLWZcXGRdezI0fSQvaS50ZXN0KGNpdHlJZCkpIHtcbiAgICAgICAgd2hlcmUuY2l0eUlkID0gY2l0eUlkO1xuICAgICAgfSBlbHNlIGlmIChjaXR5SWQpIHtcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCB0cnkgdG8gbG9vayB1cCB0aGUgY2l0eSBieSBuYW1lL3N0YXRlXG4gICAgICAgIGNvbnN0IFtjaXR5TmFtZSwgc3RhdGVdID0gY2l0eUlkLnNwbGl0KFwiLFwiKS5tYXAocyA9PiBzLnRyaW0oKSk7XG4gICAgICAgIGNvbnN0IGNpdHkgPSBhd2FpdCBwcmlzbWEuY2l0eS5maW5kRmlyc3Qoe1xuICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICBjaXR5TmFtZTogY2l0eU5hbWUsXG4gICAgICAgICAgICAuLi4oc3RhdGUgPyB7IHN0YXRlOiBzdGF0ZSB9IDoge30pXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNpdHkpIHtcbiAgICAgICAgICB3aGVyZS5jaXR5SWQgPSBjaXR5LmlkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFpc0FsbChjYXRlZ29yeUlkKSkge1xuICAgICAgLy8gSWYgY2F0ZWdvcnlJZCBsb29rcyBsaWtlIGFuIE9iamVjdElkLCB1c2UgaXQgZGlyZWN0bHlcbiAgICAgIGlmIChjYXRlZ29yeUlkICYmIC9eW2EtZlxcZF17MjR9JC9pLnRlc3QoY2F0ZWdvcnlJZCkpIHtcbiAgICAgICAgd2hlcmUuY2F0ZWdvcnlJZHMgPSB7IGhhczogY2F0ZWdvcnlJZCB9O1xuICAgICAgfSBlbHNlIGlmIChjYXRlZ29yeUlkKSB7XG4gICAgICAgIC8vIE90aGVyd2lzZSwgdHJ5IHRvIGxvb2sgdXAgdGhlIGNhdGVnb3J5IGJ5IG5hbWVcbiAgICAgICAgY29uc3QgY2F0ZWdvcnkgPSBhd2FpdCBwcmlzbWEuY2F0ZWdvcnkuZmluZEZpcnN0KHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgY2F0ZWdvcnlOYW1lOiBjYXRlZ29yeUlkXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNhdGVnb3J5KSB7XG4gICAgICAgICAgd2hlcmUuY2F0ZWdvcnlJZHMgPSB7IGhhczogY2F0ZWdvcnkuaWQgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE9ubHkgc2hvdyB1cGNvbWluZyBldmVudHMgKGVuZERhdGUgb3Igc3RhcnREYXRlIGluIHRoZSBmdXR1cmUpXG4gICAgd2hlcmUgPSB7XG4gICAgICAuLi53aGVyZSxcbiAgICAgIE9SOiBbXG4gICAgICAgIHsgZW5kRGF0ZTogeyBndGU6IG5vdyB9IH0sXG4gICAgICAgIHsgQU5EOiBbeyBlbmREYXRlOiBudWxsIH0sIHsgc3RhcnREYXRlOiB7IGd0ZTogbm93IH0gfV0gfVxuICAgICAgXSxcbiAgICAgIHN0YXR1czogeyBub3Q6IFwiY29tcGxldGVkXCIgfVxuICAgIH07XG5cbiAgICAvLyBJZiAndG9wJyBwYXJhbSBpcyBwcmVzZW50LCByZXR1cm4gdG9wIE4gZHJpdmVzIGJ5IHBhcnRpY2lwYW50c1xuICAgIGlmICh0b3ApIHtcbiAgICAgIGNvbnN0IGxpbWl0ID0gcGFyc2VJbnQodG9wKTtcbiAgICAgIGlmICghaXNOYU4obGltaXQpKSB7XG4gICAgICAgIGNvbnN0IHRvcEV2ZW50cyA9IGF3YWl0IHByaXNtYS5ldmVudC5maW5kTWFueSh7XG4gICAgICAgICAgdGFrZTogbGltaXQsXG4gICAgICAgICAgb3JkZXJCeToge1xuICAgICAgICAgICAgY3VycmVudFBhcnRpY2lwYW50czogJ2Rlc2MnXG4gICAgICAgICAgfSxcbiAgICAgICAgICB3aGVyZSxcbiAgICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICBjaXR5OiB0cnVlLFxuICAgICAgICAgICAgY2F0ZWdvcmllczogdHJ1ZSxcbiAgICAgICAgICAgIGNyZWF0b3I6IHtcbiAgICAgICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHRvcEV2ZW50cyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRmV0Y2ggZXZlbnRzIHdpdGggZmlsdGVyc1xuICAgIGxldCBldmVudHMgPSBhd2FpdCBwcmlzbWEuZXZlbnQuZmluZE1hbnkoe1xuICAgICAgd2hlcmUsXG4gICAgICBpbmNsdWRlOiB7XG4gICAgICAgIGNpdHk6IHRydWUsXG4gICAgICAgIGNhdGVnb3JpZXM6IHRydWUsXG4gICAgICAgIGNyZWF0b3I6IHtcbiAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIG9yZGVyQnk6IHtcbiAgICAgICAgc3RhcnREYXRlOiBcImFzY1wiLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIEZpbHRlciBldmVudHMgYmFzZWQgb24gbWluaW11bSBwYXJ0aWNpcGFudCByZXF1aXJlbWVudHNcbiAgICBldmVudHMgPSBldmVudHMuZmlsdGVyKGV2ZW50ID0+IHtcbiAgICAgIGNvbnN0IG1pblBhcnRpY2lwYW50cyA9IE1hdGgubWF4KFxuICAgICAgICBNYXRoLmNlaWwoZXZlbnQuZXhwZWN0ZWRQYXJ0aWNpcGFudHMgLyAzKSwgLy8gMS8zIG9mIGV4cGVjdGVkXG4gICAgICAgIDEwIC8vIG1pbmltdW0gb2YgMTBcbiAgICAgICk7XG4gICAgICByZXR1cm4gZXZlbnQuY3VycmVudFBhcnRpY2lwYW50cyA+PSBtaW5QYXJ0aWNpcGFudHM7XG4gICAgfSk7XG5cbiAgICAvLyBBdXRvLXVwZGF0ZSBldmVudCBzdGF0dXNlcyBvbiBhY2Nlc3NcbiAgICBjb25zdCB1cGRhdGVzID0gZXZlbnRzLm1hcChhc3luYyAoZXZlbnQpID0+IHtcbiAgICAgIGxldCBuZWVkc1VwZGF0ZSA9IGZhbHNlO1xuICAgICAgbGV0IG5ld1N0YXR1cyA9IGV2ZW50LnN0YXR1cztcbiAgICAgIGxldCBuZXdTdGF0dXNSZWFzb24gPSBldmVudC5zdGF0dXNSZWFzb247XG4gICAgICBsZXQgbmV3UG9zdHBvbmVkVW50aWwgPSBldmVudC5wb3N0cG9uZWRVbnRpbDtcblxuICAgICAgY29uc3QgbWluUGFydGljaXBhbnRzID0gTWF0aC5tYXgoXG4gICAgICAgIE1hdGguY2VpbChldmVudC5leHBlY3RlZFBhcnRpY2lwYW50cyAvIDMpLFxuICAgICAgICAxMFxuICAgICAgKTtcbiAgICAgIGNvbnN0IGVmZmVjdGl2ZUVuZERhdGUgPSBldmVudC5lbmREYXRlIHx8IGV2ZW50LnN0YXJ0RGF0ZTtcblxuICAgICAgLy8gU2V0IHRvIG5vdF9jb21wbGV0ZWQgaWYgZXZlbnQgaXMgb3ZlciBhbmQgZGlkIG5vdCBtZWV0IG1pbmltdW0gcGFydGljaXBhbnRzXG4gICAgICBpZiAoXG4gICAgICAgIG5ldyBEYXRlKGVmZmVjdGl2ZUVuZERhdGUpIDwgbm93ICYmXG4gICAgICAgIGV2ZW50LmN1cnJlbnRQYXJ0aWNpcGFudHMgPCBtaW5QYXJ0aWNpcGFudHMgJiZcbiAgICAgICAgZXZlbnQuc3RhdHVzICE9PSBcIm5vdF9jb21wbGV0ZWRcIiAmJlxuICAgICAgICBldmVudC5zdGF0dXMgIT09IFwiY2FuY2VsbGVkXCJcbiAgICAgICkge1xuICAgICAgICBuZXdTdGF0dXMgPSBcIm5vdF9jb21wbGV0ZWRcIjtcbiAgICAgICAgbmV3U3RhdHVzUmVhc29uID0gXCJFdmVudCBkaWQgbm90IG1lZXQgdGhlIG1pbmltdW0gcGFydGljaXBhbnQgcmVxdWlyZW1lbnQgYW5kIHdhcyBub3QgY29tcGxldGVkLlwiO1xuICAgICAgICBuZWVkc1VwZGF0ZSA9IHRydWU7XG4gICAgICB9XG4gICAgICAvLyBBbHdheXMgc2V0IHRvIGNvbXBsZXRlZCBpZiB0aGUgZW5kIGRhdGUgaGFzIHBhc3NlZCwgcmVnYXJkbGVzcyBvZiBwcmV2aW91cyBzdGF0dXMgKHVubGVzcyBjYW5jZWxsZWQpXG4gICAgICBpZiAobmV3IERhdGUoZWZmZWN0aXZlRW5kRGF0ZSkgPCBub3cgJiYgZXZlbnQuc3RhdHVzICE9PSBcImNvbXBsZXRlZFwiICYmIGV2ZW50LnN0YXR1cyAhPT0gXCJjYW5jZWxsZWRcIikge1xuICAgICAgICBuZXdTdGF0dXMgPSBcImNvbXBsZXRlZFwiO1xuICAgICAgICBuZXdTdGF0dXNSZWFzb24gPSBcIkF1dG9tYXRpY2FsbHkgY29tcGxldGVkIGFzIGVuZCBkYXRlIHBhc3NlZC5cIjtcbiAgICAgICAgbmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgICAgICBjb25zb2xlLmxvZyhgQXV0by1jb21wbGV0aW5nIGV2ZW50ICR7ZXZlbnQuaWR9ICgke2V2ZW50LmV2ZW50TmFtZX0pIGFzIGl0cyBlbmQgZGF0ZSAoJHtlZmZlY3RpdmVFbmREYXRlfSkgaXMgYmVmb3JlIG5vdyAoJHtub3cudG9JU09TdHJpbmcoKX0pYCk7XG4gICAgICB9IGVsc2UgaWYgKGV2ZW50LnN0YXR1cyA9PT0gXCJwb3N0cG9uZWRcIiAmJiBldmVudC5wb3N0cG9uZWRVbnRpbCAmJiBuZXcgRGF0ZShldmVudC5wb3N0cG9uZWRVbnRpbCkgPCBub3cpIHtcbiAgICAgICAgLy8gTG9naWMgdG8gcmV2ZXJ0IGZyb20gcG9zdHBvbmVkIHRvIHVwY29taW5nIChhbHJlYWR5IHByZXNlbnQpXG4gICAgICAgIG5ld1N0YXR1cyA9IFwidXBjb21pbmdcIjtcbiAgICAgICAgbmV3U3RhdHVzUmVhc29uID0gXCJBdXRvbWF0aWNhbGx5IHJlc3VtZWQgYWZ0ZXIgcG9zdHBvbmVtZW50IHBlcmlvZC5cIjtcbiAgICAgICAgbmV3UG9zdHBvbmVkVW50aWwgPSBudWxsOyAvLyBDbGVhciBwb3N0cG9uZWRVbnRpbCBvbmNlIHJlc3VtZWRcbiAgICAgICAgbmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChldmVudC5zdGF0dXMgPT09IFwidXBjb21pbmdcIiAmJiBuZXcgRGF0ZShldmVudC5zdGFydERhdGUpIDw9IG5vdyAmJiAoZXZlbnQuZW5kRGF0ZSA/IG5ldyBEYXRlKGV2ZW50LmVuZERhdGUpID49IG5vdyA6IHRydWUpKSB7XG4gICAgICAgIC8vIExvZ2ljIHRvIHNldCB1cGNvbWluZyB0byBhY3RpdmUgaWYgc3RhcnQgZGF0ZSBoYXMgcGFzc2VkIGFuZCBlbmQgZGF0ZSBoYXNuJ3QgKG9yIG5vIGVuZCBkYXRlKVxuICAgICAgICBuZXdTdGF0dXMgPSBcImFjdGl2ZVwiO1xuICAgICAgICBuZXdTdGF0dXNSZWFzb24gPSBcIkF1dG9tYXRpY2FsbHkgc2V0IHRvIGFjdGl2ZSBhcyBzdGFydCBkYXRlIGhhcyBwYXNzZWQuXCI7XG4gICAgICAgIG5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQuc3RhdHVzID09PSBcImFjdGl2ZVwiICYmIGVmZmVjdGl2ZUVuZERhdGUgJiYgbmV3IERhdGUoZWZmZWN0aXZlRW5kRGF0ZSkgPCBub3cpIHtcbiAgICAgICAgLy8gTG9naWMgdG8gc2V0IGFjdGl2ZSB0byBjb21wbGV0ZWQgaWYgZW5kIGRhdGUgaGFzIHBhc3NlZFxuICAgICAgICBuZXdTdGF0dXMgPSBcImNvbXBsZXRlZFwiO1xuICAgICAgICBuZXdTdGF0dXNSZWFzb24gPSBcIkF1dG9tYXRpY2FsbHkgY29tcGxldGVkIGFzIGVuZCBkYXRlIHBhc3NlZCB3aGlsZSBhY3RpdmUuXCI7XG4gICAgICAgIG5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5sb2coYEF1dG8tY29tcGxldGluZyBhY3RpdmUgZXZlbnQgJHtldmVudC5pZH0gKCR7ZXZlbnQuZXZlbnROYW1lfSkgYXMgaXRzIGVuZCBkYXRlICgke2VmZmVjdGl2ZUVuZERhdGV9KSBpcyBiZWZvcmUgbm93ICgke25vdy50b0lTT1N0cmluZygpfSlgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRzVXBkYXRlKSB7XG4gICAgICAgIC8vIEFsd2F5cyBpbmNsdWRlIGFsbCByZXF1aXJlZCBmaWVsZHNcbiAgICAgICAgcmV0dXJuIGF3YWl0IHByaXNtYS5ldmVudC51cGRhdGUoe1xuICAgICAgICAgIHdoZXJlOiB7IGlkOiBldmVudC5pZCB9LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHN0YXR1czogbmV3U3RhdHVzLFxuICAgICAgICAgICAgc3RhdHVzUmVhc29uOiBuZXdTdGF0dXNSZWFzb24sXG4gICAgICAgICAgICBzdGF0dXNVcGRhdGVkQXQ6IG5vdyxcbiAgICAgICAgICAgIHBvc3Rwb25lZFVudGlsOiBuZXdQb3N0cG9uZWRVbnRpbCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICAgIGNpdHk6IHRydWUsXG4gICAgICAgICAgICBjYXRlZ29yaWVzOiB0cnVlLFxuICAgICAgICAgICAgY3JlYXRvcjogeyBzZWxlY3Q6IHsgaWQ6IHRydWUsIG5hbWU6IHRydWUgfSB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQWx3YXlzIGZldGNoIHRoZSBmdWxsIGV2ZW50IHdpdGggYWxsIHJlcXVpcmVkIGZpZWxkc1xuICAgICAgICByZXR1cm4gYXdhaXQgcHJpc21hLmV2ZW50LmZpbmRVbmlxdWUoe1xuICAgICAgICAgIHdoZXJlOiB7IGlkOiBldmVudC5pZCB9LFxuICAgICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICAgIGNpdHk6IHRydWUsXG4gICAgICAgICAgICBjYXRlZ29yaWVzOiB0cnVlLFxuICAgICAgICAgICAgY3JlYXRvcjogeyBzZWxlY3Q6IHsgaWQ6IHRydWUsIG5hbWU6IHRydWUgfSB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gV2FpdCBmb3IgYWxsIHBvdGVudGlhbCB1cGRhdGVzIHRvIGNvbXBsZXRlXG4gICAgY29uc3QgdXBkYXRlZFJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbCh1cGRhdGVzKTtcbiAgICBldmVudHMgPSB1cGRhdGVkUmVzdWx0cy5maWx0ZXIoKGV2ZW50KTogZXZlbnQgaXMgTm9uTnVsbGFibGU8dHlwZW9mIGV2ZW50PiA9PiBldmVudCAhPT0gbnVsbCk7XG5cbiAgICAvLyBGaWx0ZXIgb3V0IGFueSBldmVudHMgdGhhdCBzb21laG93IHN0aWxsIGhhdmUgbnVsbCBjaXR5IChqdXN0IGluIGNhc2UpXG4gICAgZXZlbnRzID0gZXZlbnRzLmZpbHRlcihldmVudCA9PiBldmVudC5jaXR5ICE9PSBudWxsKTtcblxuICAgIC8vIFNvcnQgZXZlbnRzXG4gICAgaWYgKHNvcnRCeSA9PT0gXCJkYXRlXCIpIHtcbiAgICAgIGV2ZW50cyA9IGV2ZW50cy5zb3J0KChhLCBiKSA9PiBuZXcgRGF0ZShhLnN0YXJ0RGF0ZSkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYi5zdGFydERhdGUpLmdldFRpbWUoKSk7XG4gICAgfSBlbHNlIGlmIChzb3J0QnkgPT09IFwicGFydGljaXBhbnRzXCIpIHtcbiAgICAgIGV2ZW50cyA9IGV2ZW50cy5zb3J0KChhLCBiKSA9PiBiLmN1cnJlbnRQYXJ0aWNpcGFudHMgLSBhLmN1cnJlbnRQYXJ0aWNpcGFudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihldmVudHMgfHwgW10pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vIFNhZmVseSBsb2cgdGhlIGVycm9yXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvciBvY2N1cnJlZCc7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGV2ZW50czpcIiwgZXJyb3JNZXNzYWdlKTtcbiAgICBcbiAgICAvLyBSZXR1cm4gYSBwcm9wZXIgZXJyb3IgcmVzcG9uc2VcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBcIkVycm9yIGZldGNoaW5nIGV2ZW50c1wiLCBtZXNzYWdlOiBlcnJvck1lc3NhZ2UgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuLy8gUE9TVCBlbmRwb2ludCBmb3IgY3JlYXRpbmcgZXZlbnRzIChleGlzdGluZyBjb2RlKVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbihhdXRoT3B0aW9ucyk7XG4gICAgLy8gQ2hlY2sgaWYgdXNlciBpcyBhdXRoZW50aWNhdGVkXG4gICAgaWYgKCFzZXNzaW9uPy51c2VyPy5pZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IG1lc3NhZ2U6IFwiWW91IG11c3QgYmUgc2lnbmVkIGluIHRvIGNyZWF0ZSBhbiBldmVudFwiIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIGNvbnN0IHtcbiAgICAgIGV2ZW50TmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgc3RhcnREYXRlLFxuICAgICAgZW5kRGF0ZSxcbiAgICAgIHRpbWUsXG4gICAgICBsb2NhdGlvbixcbiAgICAgIGZ1bGxBZGRyZXNzLFxuICAgICAgbGF0aXR1ZGUsXG4gICAgICBsb25naXR1ZGUsXG4gICAgICBjaXR5SWQsXG4gICAgICBjYXRlZ29yeUlkLFxuICAgICAgZXhwZWN0ZWRQYXJ0aWNpcGFudHMsXG4gICAgfSA9IGRhdGE7XG4gICAgLy8gVmFsaWRhdGUgcmVxdWlyZWQgZmllbGRzXG4gICAgaWYgKCFldmVudE5hbWUgfHwgIWRlc2NyaXB0aW9uIHx8ICFzdGFydERhdGUgfHwgIXRpbWUgfHwgIWxvY2F0aW9uIHx8ICFjaXR5SWQgfHwgIWNhdGVnb3J5SWQgfHwgIWV4cGVjdGVkUGFydGljaXBhbnRzKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgbWVzc2FnZTogXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkc1wiIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG4gICAgLy8gQ3JlYXRlIGV2ZW50IGluIE1vbmdvREJcbiAgICBjb25zdCBldmVudCA9IGF3YWl0IHByaXNtYS5ldmVudC5jcmVhdGUoe1xuICAgICAgZGF0YToge1xuICAgICAgICBldmVudE5hbWUsXG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICBzdGFydERhdGU6IG5ldyBEYXRlKHN0YXJ0RGF0ZSksXG4gICAgICAgIGVuZERhdGU6IGVuZERhdGUgPyBuZXcgRGF0ZShlbmREYXRlKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgdGltZSxcbiAgICAgICAgbG9jYXRpb24sXG4gICAgICAgIGZ1bGxBZGRyZXNzLFxuICAgICAgICBsYXRpdHVkZSxcbiAgICAgICAgbG9uZ2l0dWRlLFxuICAgICAgICBjaXR5SWQsXG4gICAgICAgIGNhdGVnb3J5SWRzOiBbY2F0ZWdvcnlJZF0sXG4gICAgICAgIGV4cGVjdGVkUGFydGljaXBhbnRzOiBwYXJzZUludChleHBlY3RlZFBhcnRpY2lwYW50cyksXG4gICAgICAgIGN1cnJlbnRQYXJ0aWNpcGFudHM6IDAsXG4gICAgICAgIHN0YXR1czogXCJ1cGNvbWluZ1wiLCAvLyBTZXQgZGVmYXVsdCBzdGF0dXMgZm9yIG5ldyBldmVudHNcbiAgICAgICAgY3JlYXRvcklkOiBzZXNzaW9uLnVzZXIuaWQsXG4gICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcbiAgICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oZXZlbnQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjcmVhdGluZyBldmVudDpcIiwgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgbWVzc2FnZTogXCJFcnJvciBjcmVhdGluZyBldmVudFwiIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59ICJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJOZXh0UmVzcG9uc2UiLCJnZXRTZXJ2ZXJTZXNzaW9uIiwiYXV0aE9wdGlvbnMiLCJwcmlzbWEiLCJHRVQiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiY2l0eUlkIiwiZ2V0IiwiY2F0ZWdvcnlJZCIsInNvcnRCeSIsInRvcCIsIm5vdyIsIkRhdGUiLCJ3aGVyZSIsImlzQWxsIiwidmFsIiwidHJpbSIsInRvTG93ZXJDYXNlIiwidGVzdCIsImNpdHlOYW1lIiwic3RhdGUiLCJzcGxpdCIsIm1hcCIsInMiLCJjaXR5IiwiZmluZEZpcnN0IiwiaWQiLCJjYXRlZ29yeUlkcyIsImhhcyIsImNhdGVnb3J5IiwiY2F0ZWdvcnlOYW1lIiwiT1IiLCJlbmREYXRlIiwiZ3RlIiwiQU5EIiwic3RhcnREYXRlIiwic3RhdHVzIiwibm90IiwibGltaXQiLCJwYXJzZUludCIsImlzTmFOIiwidG9wRXZlbnRzIiwiZXZlbnQiLCJmaW5kTWFueSIsInRha2UiLCJvcmRlckJ5IiwiY3VycmVudFBhcnRpY2lwYW50cyIsImluY2x1ZGUiLCJjYXRlZ29yaWVzIiwiY3JlYXRvciIsInNlbGVjdCIsIm5hbWUiLCJqc29uIiwiZXZlbnRzIiwiZmlsdGVyIiwibWluUGFydGljaXBhbnRzIiwiTWF0aCIsIm1heCIsImNlaWwiLCJleHBlY3RlZFBhcnRpY2lwYW50cyIsInVwZGF0ZXMiLCJuZWVkc1VwZGF0ZSIsIm5ld1N0YXR1cyIsIm5ld1N0YXR1c1JlYXNvbiIsInN0YXR1c1JlYXNvbiIsIm5ld1Bvc3Rwb25lZFVudGlsIiwicG9zdHBvbmVkVW50aWwiLCJlZmZlY3RpdmVFbmREYXRlIiwiY29uc29sZSIsImxvZyIsImV2ZW50TmFtZSIsInRvSVNPU3RyaW5nIiwidXBkYXRlIiwiZGF0YSIsInN0YXR1c1VwZGF0ZWRBdCIsImZpbmRVbmlxdWUiLCJ1cGRhdGVkUmVzdWx0cyIsIlByb21pc2UiLCJhbGwiLCJzb3J0IiwiYSIsImIiLCJnZXRUaW1lIiwiZXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJFcnJvciIsIm1lc3NhZ2UiLCJQT1NUIiwic2Vzc2lvbiIsInVzZXIiLCJkZXNjcmlwdGlvbiIsInRpbWUiLCJsb2NhdGlvbiIsImZ1bGxBZGRyZXNzIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJjcmVhdGUiLCJ1bmRlZmluZWQiLCJjcmVhdG9ySWQiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/events/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var _auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/prisma-adapter */ \"(rsc)/./node_modules/@auth/prisma-adapter/index.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\nconst authOptions = {\n    adapter: (0,_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_0__.PrismaAdapter)(prisma),\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                const user = await prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user || !user?.password) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                if (!user.emailVerified) {\n                    throw new Error(\"Please verify your email address before signing in. Check your inbox for a verification link.\");\n                }\n                const isCorrectPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(credentials.password, user.password);\n                if (!isCorrectPassword) {\n                    throw new Error(\"Invalid credentials\");\n                }\n                return user;\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session?.user) {\n                session.user.id = token.id;\n            }\n            return session;\n        }\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    secret: process.env.NEXTAUTH_SECRET,\n    debug: \"development\" === \"development\",\n    pages: {\n        signIn: \"/auth/signin\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxRDtBQUNQO0FBQ2hCO0FBRW9DO0FBRWxFLE1BQU1JLFNBQVMsSUFBSUgsd0RBQVlBO0FBRXhCLE1BQU1JLGNBQTJCO0lBQ3RDQyxTQUFTTixtRUFBYUEsQ0FBQ0k7SUFDdkJHLFdBQVc7UUFDVEosMkVBQW1CQSxDQUFDO1lBQ2xCSyxNQUFNO1lBQ05DLGFBQWE7Z0JBQ1hDLE9BQU87b0JBQUVDLE9BQU87b0JBQVNDLE1BQU07Z0JBQVE7Z0JBQ3ZDQyxVQUFVO29CQUFFRixPQUFPO29CQUFZQyxNQUFNO2dCQUFXO1lBQ2xEO1lBQ0EsTUFBTUUsV0FBVUwsV0FBVztnQkFDekIsSUFBSSxDQUFDQSxhQUFhQyxTQUFTLENBQUNELGFBQWFJLFVBQVU7b0JBQ2pELE1BQU0sSUFBSUUsTUFBTTtnQkFDbEI7Z0JBRUEsTUFBTUMsT0FBTyxNQUFNWixPQUFPWSxJQUFJLENBQUNDLFVBQVUsQ0FBQztvQkFDeENDLE9BQU87d0JBQ0xSLE9BQU9ELFlBQVlDLEtBQUs7b0JBQzFCO2dCQUNGO2dCQUVBLElBQUksQ0FBQ00sUUFBUSxDQUFDQSxNQUFNSCxVQUFVO29CQUM1QixNQUFNLElBQUlFLE1BQU07Z0JBQ2xCO2dCQUVBLElBQUksQ0FBQ0MsS0FBS0csYUFBYSxFQUFFO29CQUN2QixNQUFNLElBQUlKLE1BQU07Z0JBQ2xCO2dCQUVBLE1BQU1LLG9CQUFvQixNQUFNbEIsdURBQWMsQ0FDNUNPLFlBQVlJLFFBQVEsRUFDcEJHLEtBQUtILFFBQVE7Z0JBR2YsSUFBSSxDQUFDTyxtQkFBbUI7b0JBQ3RCLE1BQU0sSUFBSUwsTUFBTTtnQkFDbEI7Z0JBRUEsT0FBT0M7WUFDVDtRQUNGO0tBQ0Q7SUFDRE0sV0FBVztRQUNULE1BQU1DLEtBQUksRUFBRUMsS0FBSyxFQUFFUixJQUFJLEVBQUU7WUFDdkIsSUFBSUEsTUFBTTtnQkFDUlEsTUFBTUMsRUFBRSxHQUFHVCxLQUFLUyxFQUFFO1lBQ3BCO1lBQ0EsT0FBT0Q7UUFDVDtRQUNBLE1BQU1FLFNBQVEsRUFBRUEsT0FBTyxFQUFFRixLQUFLLEVBQUU7WUFDOUIsSUFBSUUsU0FBU1YsTUFBTTtnQkFDakJVLFFBQVFWLElBQUksQ0FBQ1MsRUFBRSxHQUFHRCxNQUFNQyxFQUFFO1lBQzVCO1lBQ0EsT0FBT0M7UUFDVDtJQUNGO0lBQ0FBLFNBQVM7UUFDUEMsVUFBVTtJQUNaO0lBQ0FDLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtJQUNuQ0MsT0FBT0gsa0JBQXlCO0lBQ2hDSSxPQUFPO1FBQ0xDLFFBQVE7SUFDVjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIkU6XFxEZWVwc2hpa2FcXHdlYiBkZXZlbG9wbWVudFxcVG9nZXRoZXItV2UtQ2FuLW1haW5cXHNyY1xcbGliXFxhdXRoLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUFkYXB0ZXIgfSBmcm9tIFwiQGF1dGgvcHJpc21hLWFkYXB0ZXJcIjtcbmltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gXCJAcHJpc21hL2NsaWVudFwiO1xuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIjtcbmltcG9ydCB7IEF1dGhPcHRpb25zIH0gZnJvbSBcIm5leHQtYXV0aFwiO1xuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIjtcblxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xuXG5leHBvcnQgY29uc3QgYXV0aE9wdGlvbnM6IEF1dGhPcHRpb25zID0ge1xuICBhZGFwdGVyOiBQcmlzbWFBZGFwdGVyKHByaXNtYSksXG4gIHByb3ZpZGVyczogW1xuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgY3JlZGVudGlhbHM6IHtcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6IFwiRW1haWxcIiwgdHlwZTogXCJlbWFpbFwiIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiBcIlBhc3N3b3JkXCIsIHR5cGU6IFwicGFzc3dvcmRcIiB9LFxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjcmVkZW50aWFsc1wiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgZW1haWw6IGNyZWRlbnRpYWxzLmVtYWlsLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghdXNlciB8fCAhdXNlcj8ucGFzc3dvcmQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNyZWRlbnRpYWxzXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF1c2VyLmVtYWlsVmVyaWZpZWQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2UgdmVyaWZ5IHlvdXIgZW1haWwgYWRkcmVzcyBiZWZvcmUgc2lnbmluZyBpbi4gQ2hlY2sgeW91ciBpbmJveCBmb3IgYSB2ZXJpZmljYXRpb24gbGluay5cIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBpc0NvcnJlY3RQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKFxuICAgICAgICAgIGNyZWRlbnRpYWxzLnBhc3N3b3JkLFxuICAgICAgICAgIHVzZXIucGFzc3dvcmRcbiAgICAgICAgKTtcblxuICAgICAgICBpZiAoIWlzQ29ycmVjdFBhc3N3b3JkKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjcmVkZW50aWFsc1wiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB1c2VyO1xuICAgICAgfSxcbiAgICB9KSxcbiAgXSxcbiAgY2FsbGJhY2tzOiB7XG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgdG9rZW4uaWQgPSB1c2VyLmlkO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH0sXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcbiAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLmlkIGFzIHN0cmluZztcbiAgICAgIH1cbiAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgIH0sXG4gIH0sXG4gIHNlc3Npb246IHtcbiAgICBzdHJhdGVneTogXCJqd3RcIixcbiAgfSxcbiAgc2VjcmV0OiBwcm9jZXNzLmVudi5ORVhUQVVUSF9TRUNSRVQsXG4gIGRlYnVnOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiLFxuICBwYWdlczoge1xuICAgIHNpZ25JbjogXCIvYXV0aC9zaWduaW5cIixcbiAgfSxcbn07ICJdLCJuYW1lcyI6WyJQcmlzbWFBZGFwdGVyIiwiUHJpc21hQ2xpZW50IiwiYmNyeXB0IiwiQ3JlZGVudGlhbHNQcm92aWRlciIsInByaXNtYSIsImF1dGhPcHRpb25zIiwiYWRhcHRlciIsInByb3ZpZGVycyIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJFcnJvciIsInVzZXIiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJlbWFpbFZlcmlmaWVkIiwiaXNDb3JyZWN0UGFzc3dvcmQiLCJjb21wYXJlIiwiY2FsbGJhY2tzIiwiand0IiwidG9rZW4iLCJpZCIsInNlc3Npb24iLCJzdHJhdGVneSIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUQVVUSF9TRUNSRVQiLCJkZWJ1ZyIsInBhZ2VzIiwic2lnbkluIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/object-hash","vendor-chunks/@auth","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/yallist","vendor-chunks/lru-cache","vendor-chunks/preact-render-to-string","vendor-chunks/oidc-token-hash","vendor-chunks/@panva"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fevents%2Froute&page=%2Fapi%2Fevents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevents%2Froute.ts&appDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5CDeepshika%5Cweb%20development%5CTogether-We-Can-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();