(()=>{var e={};e.id=8771,e.ids=[8771],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},99486:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>x});var s={};t.r(s),t.d(s,{GET:()=>c});var i=t(42706),n=t(28203),a=t(45994),o=t(96330),p=t(39187);let u=new o.PrismaClient;async function c(){try{let e=await u.city.findMany();return p.NextResponse.json(e)}catch(e){return console.error("Error fetching cities:",e),p.NextResponse.json({message:"Error fetching cities"},{status:500})}}let d=new i.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/cities/route",pathname:"/api/cities",filename:"route",bundlePath:"app/api/cities/route"},resolvedPagePath:"E:\\Deepshika\\web development\\Together-We-Can-main\\src\\app\\api\\cities\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:x,serverHooks:m}=d;function g(){return(0,a.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:x})}},96487:()=>{},78335:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,5452],()=>t(99486));module.exports=s})();